generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Department {
  id          String    @unique @default(uuid())
  name        String    @unique
  description String
  createdAt   DateTime  @default(now()) @map("created_at")
  createdBy   String    @map("created_by")
  updatedAt   DateTime? @map("updated_at")
  updatedBy   String?   @map("updated_by")
  deletedAt   DateTime? @map("deleted_at")
  deletedBy   String?   @map("deleted_by")

  users User[]

  @@map("departments")
}

model User {
  id           String     @id @default(uuid())
  name         String
  email        String     @unique
  passwordHash String     @map("password_hash")
  departmentId String     @map("department_id")
  department   Department @relation(fields: [departmentId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")

  products    Product[]
  warehouses  Warehouse[]
  suppliers   Supplier[]
  costCenters CostCenter[]

  @@map("users")
}

model Product {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  status      Int
  createdAt   DateTime  @default(now()) @map("created_at")
  createdBy   String    @map("created_by")
  user        User      @relation(fields: [createdBy], references: [id])
  updatedAt   DateTime? @default(now()) @map("updated_at")
  updatedBy   String?   @map("updated_by")

  productMovements ProductMovement[]

  @@map("products")
}

model Warehouse {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  status      Int
  createdAt   DateTime  @default(now()) @map("created_at")
  createdBy   String    @map("created_by")
  user        User      @relation(fields: [createdBy], references: [id])
  updatedAt   DateTime? @default(now()) @map("updated_at")
  updatedBy   String?   @map("updated_by")

  productMovements ProductMovement[]

  @@map("warehouses")
}

model Supplier {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  status      Int
  createdAt   DateTime  @default(now()) @map("created_at")
  createdBy   String    @map("created_by")
  user        User      @relation(fields: [createdBy], references: [id])
  updatedAt   DateTime? @default(now()) @map("updated_at")
  updatedBy   String?   @map("updated_by")

  @@map("suppliers")
}

model CostCenter {
  id        String    @id @default(uuid())
  code      String    @unique
  name      String
  status    Int
  createdAt DateTime  @default(now()) @map("created_at")
  createdBy String    @map("created_by")
  user      User      @relation(fields: [createdBy], references: [id])
  updatedAt DateTime? @default(now()) @map("updated_at")
  updatedBy String?   @map("updated_by")

  @@map("costcenters")
}

model ProductMovement {
  id           String    @id @default(uuid())
  productId    String    @map("product_id")
  product      Product   @relation(fields: [productId], references: [id])
  warehouseId  String    @map("warehouse_id")
  warehouse    Warehouse @relation(fields: [warehouseId], references: [id])
  movementType Int
  quantity     Int
  value        Int
  createdAt    DateTime  @default(now()) @map("created_at")

  @@map("productsmovement")
}
